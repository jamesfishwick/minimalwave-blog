# Generated by Django 5.2 on 2025-09-17 02:37

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("blog", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="LinkedInCredentials",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "client_id",
                    models.CharField(
                        help_text="LinkedIn App Client ID", max_length=255
                    ),
                ),
                (
                    "client_secret",
                    models.CharField(
                        help_text="LinkedIn App Client Secret", max_length=255
                    ),
                ),
                (
                    "access_token",
                    models.TextField(
                        blank=True, default="", help_text="LinkedIn OAuth access token"
                    ),
                ),
                (
                    "refresh_token",
                    models.TextField(
                        blank=True, help_text="LinkedIn OAuth refresh token", null=True
                    ),
                ),
                (
                    "token_expires_at",
                    models.DateTimeField(
                        blank=True, help_text="When the access token expires", null=True
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True,
                        help_text="OAuth state for CSRF protection",
                        max_length=128,
                        null=True,
                    ),
                ),
                (
                    "authorized_user",
                    models.CharField(
                        default="pending",
                        help_text="LinkedIn user who authorized the app",
                        max_length=255,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "LinkedIn Credentials",
                "verbose_name_plural": "LinkedIn Credentials",
            },
        ),
        migrations.CreateModel(
            name="LinkedInSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "enabled",
                    models.BooleanField(
                        default=True, help_text="Enable LinkedIn integration globally"
                    ),
                ),
                (
                    "auto_post_entries",
                    models.BooleanField(
                        default=True,
                        help_text="Automatically post blog entries to LinkedIn",
                    ),
                ),
                (
                    "auto_post_blogmarks",
                    models.BooleanField(
                        default=False,
                        help_text="Automatically post blogmarks to LinkedIn",
                    ),
                ),
                (
                    "include_url",
                    models.BooleanField(
                        default=True,
                        help_text="Include blog post URL in LinkedIn posts",
                    ),
                ),
                (
                    "url_template",
                    models.CharField(
                        default="Read more: {url}",
                        help_text="Template for including URL in posts",
                        max_length=255,
                    ),
                ),
            ],
            options={
                "verbose_name": "LinkedIn Settings",
                "verbose_name_plural": "LinkedIn Settings",
            },
        ),
        migrations.CreateModel(
            name="LinkedInPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "linkedin_post_id",
                    models.CharField(
                        help_text="LinkedIn post URN", max_length=255, unique=True
                    ),
                ),
                (
                    "post_url",
                    models.URLField(
                        blank=True, help_text="URL to the LinkedIn post", null=True
                    ),
                ),
                (
                    "post_text",
                    models.TextField(
                        blank=True,
                        default="",
                        help_text="Text content posted to LinkedIn",
                    ),
                ),
                ("posted_at", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("posted", "Posted"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Error message if posting failed",
                        null=True,
                    ),
                ),
                (
                    "entry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="linkedin_posts",
                        to="blog.entry",
                    ),
                ),
            ],
            options={
                "verbose_name": "LinkedIn Post",
                "verbose_name_plural": "LinkedIn Posts",
                "ordering": ["-posted_at"],
            },
        ),
    ]
