# Generated by Django 5.2 on 2025-09-17 01:55

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code for UI styling (e.g., #FF5733)",
                        max_length=7,
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Icon class name (e.g., 'fas fa-code')",
                        max_length=50,
                    ),
                ),
                ("order", models.IntegerField(default=0, help_text="Display order")),
                ("is_active", models.BooleanField(default=True)),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="ContentLinkedIn",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("entry", "Blog Entry"),
                            ("blogmark", "Blogmark"),
                            ("til", "TIL"),
                        ],
                        max_length=20,
                    ),
                ),
                ("content_id", models.IntegerField()),
                (
                    "enabled",
                    models.BooleanField(
                        default=False,
                        help_text="Automatically post to LinkedIn when published",
                    ),
                ),
                (
                    "custom_text",
                    models.TextField(
                        blank=True,
                        help_text="Custom text for LinkedIn post (leave blank to use default)",
                        null=True,
                    ),
                ),
                (
                    "posted",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this content has been posted to LinkedIn",
                    ),
                ),
                ("posted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "post_id",
                    models.CharField(
                        blank=True,
                        help_text="LinkedIn post ID for reference",
                        max_length=255,
                    ),
                ),
                (
                    "post_url",
                    models.URLField(blank=True, help_text="URL to the LinkedIn post"),
                ),
                ("last_error", models.TextField(blank=True)),
                ("retry_count", models.IntegerField(default=0)),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["content_type", "content_id"],
                        name="core_conten_content_8fb711_idx",
                    ),
                    models.Index(
                        fields=["posted", "enabled"],
                        name="core_conten_posted_4f654f_idx",
                    ),
                ],
                "unique_together": {("content_type", "content_id")},
            },
        ),
        migrations.CreateModel(
            name="Series",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.TextField()),
                (
                    "summary",
                    models.TextField(
                        blank=True, help_text="Brief summary for listing pages"
                    ),
                ),
                (
                    "cover_image",
                    models.URLField(
                        blank=True,
                        help_text="Cover image URL for the series",
                        null=True,
                    ),
                ),
                (
                    "is_complete",
                    models.BooleanField(
                        default=False, help_text="Is this series complete?"
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, help_text="Feature this series"),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "order",
                    models.IntegerField(
                        default=0, help_text="Display order for featured series"
                    ),
                ),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="series",
                        to="core.category",
                    ),
                ),
            ],
            options={
                "verbose_name": "Series",
                "verbose_name_plural": "Series",
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="EnhancedTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("slug", models.SlugField(unique=True)),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Brief description of this tag"
                    ),
                ),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("blog", "Blog"),
                            ("til", "TIL"),
                            ("all", "All Content"),
                        ],
                        default="all",
                        help_text="Which type of content this tag applies to",
                        max_length=10,
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        help_text="Hex color code for UI styling (e.g., #FF5733)",
                        max_length=7,
                    ),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        help_text="Icon class name (e.g., 'fas fa-tag')",
                        max_length=50,
                    ),
                ),
                (
                    "usage_count",
                    models.IntegerField(
                        default=0, help_text="Number of times this tag is used"
                    ),
                ),
                (
                    "last_used",
                    models.DateTimeField(
                        blank=True, help_text="Last time this tag was used", null=True
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False, help_text="Show this tag prominently"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tags",
                        to="core.category",
                    ),
                ),
            ],
            options={
                "ordering": ["-usage_count", "name"],
                "indexes": [
                    models.Index(fields=["slug"], name="core_enhanc_slug_836ce2_idx"),
                    models.Index(
                        fields=["content_type", "is_active"],
                        name="core_enhanc_content_9af629_idx",
                    ),
                ],
            },
        ),
    ]
